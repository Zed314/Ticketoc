version: '3.5'
services:
  dashboard:
    image: admo120104/ticketoc:dashboard
    build: dashboard/
    ports:
      - 8080:80
  entrypoint:
    image: admo120104/ticketoc:entrypoint
    build: entrypoint/
    ports:
      - 4000:80
    environment:
      ROUTE: /v1/tickets
      KAFKA_CONNECT: kafka:9092
      KAFKA_TOPIC: input_tickets
      KAFKA_VALUE_SERIALIZER: json
      KAFKA_COMPRESSION: gzip
    networks:
      - default
      - generator-net
    command: ["./wait-for-it.sh", "kafka:9092", "--", "python", "entrypoint.py"]
    depends_on:
      - kafka
  cash-clasp:
    image: admo120104/ticketoc:cash-clasp
    build: cash-clasp/
    ports:
      - 40510:40510
  zookeeper:
    image: zookeeper:latest
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - 9094:9094
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  mongo:
    image: mongo:latest
    ports:
      - 27017:27017
  spark:
    image: sequenceiq/spark:latest
    ports:
      - 8088:8088
      - 8042:8042
networks:
  generator-net:
    driver: bridge
