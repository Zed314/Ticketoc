version: '3.6'
services:
  dashboard:
    image: admo120104/ticketoc:dashboard
    build: dashboard/
    ports:
      - 8080:80
    depends_on:
      - cash-clasp
  entrypoint:
    image: admo120104/ticketoc:entrypoint
    build: entrypoint/
    environment:
      ROUTE: /v1/tickets
      KAFKA_CONNECT: kafka:9092
      KAFKA_TOPIC: input_tickets
      KAFKA_VALUE_SERIALIZER: json
      KAFKA_COMPRESSION: gzip
      FLASK_ENV: development
    networks:
      - default
      - generator-net
    command: ["./wait-for-it.sh", "kafka:9092", "--", "./wait-for-it.sh", "schema-registry:80", "--", "python", "entrypoint.py"]
    depends_on:
      - kafka
      - schema-registry
  schema-registry:
    image: admo120104/ticketoc:schema-registry
    build: schema-registry/
  cash-clasp:
    image: admo120104/ticketoc:cash-clasp
    build: cash-clasp/
    ports:
      - 40510:40510
    depends_on:
      - kafka
      - spark
      - entrypoint
    ports:
      - 40510:40510
  zookeeper:
    image: zookeeper:latest
  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
      - 9092:9092
  mongo:
    image: mongo:latest
  spark:
    image: sequenceiq/spark:latest
    depends_on:
      - kafka
      - mongo
networks:
  generator-net:
    driver: bridge
